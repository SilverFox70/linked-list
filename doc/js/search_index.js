var search_data = {"index":{"searchIndex":["linked_list","node","add()","delete()","delete_all()","display()","each_node()","insert()","is_empty?()","new()","new()","node()","size()","to_a()","unshift()","update()","update_all()"],"longSearchIndex":["linked_list","node","linked_list#add()","linked_list#delete()","linked_list#delete_all()","linked_list#display()","linked_list#each_node()","linked_list#insert()","linked_list#is_empty?()","linked_list::new()","node::new()","linked_list#node()","linked_list#size()","linked_list#to_a()","linked_list#unshift()","linked_list#update()","linked_list#update_all()"],"info":[["Linked_List","","Linked_List.html","","<p>This class represents a basic linked list  implementing the Node Class\n"],["Node","","Node.html","","<p>This class represents a basic node.\n"],["add","Linked_List","Linked_List.html#method-i-add","(value)","<p>Appends a node to the end of the list\n"],["delete","Linked_List","Linked_List.html#method-i-delete","(value, all=false)","<p>Deletes the node whose value matches the value passed in.\n"],["delete_all","Linked_List","Linked_List.html#method-i-delete_all","(value)","<p>Deletes all nodes whose value equals the value passed in.\n"],["display","Linked_List","Linked_List.html#method-i-display","()","<p>Returns a newline delimited string containing the values of all nodes in\nthe list\n"],["each_node","Linked_List","Linked_List.html#method-i-each_node","()","<p>Iterator for traversing the list starting at the head\n"],["insert","Linked_List","Linked_List.html#method-i-insert","(value, index)","<p>Insert a node into the list at the position just before the specified index\n"],["is_empty?","Linked_List","Linked_List.html#method-i-is_empty-3F","()","<p>Returns true if the list is empty, false otherwise\n"],["new","Linked_List","Linked_List.html#method-c-new","(value)","<p>Creates new list setting the Head Node with a value of <code>value</code>\n"],["new","Node","Node.html#method-c-new","(value, link_to = nil)","<p>Creates a new node. If no value is passed to link_to the default link_to\nvalue will be nil. Nodes are â€¦\n"],["node","Linked_List","Linked_List.html#method-i-node","()","<p>Returns the current node, which is also  the most recent node added\n"],["size","Linked_List","Linked_List.html#method-i-size","()","<p>Returns the size of the list as a count of the number of nodes.\n"],["to_a","Linked_List","Linked_List.html#method-i-to_a","()","<p>Places all the values of all nodes into an array. The head of the list is\nat index 0.\n"],["unshift","Linked_List","Linked_List.html#method-i-unshift","(value)","<p>Adds a new node to the beginning of the list.  This new node is now the\nhead.\n"],["update","Linked_List","Linked_List.html#method-i-update","(value, index)","<p>Update the node at the given index with the new value\n"],["update_all","Linked_List","Linked_List.html#method-i-update_all","(old_value, new_value)","<p>Update all nodes whose value equals the old_value\n"]]}}